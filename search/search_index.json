{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>     A platform for chronobiometric analysis   </p>"},{"location":"#_1","title":"Home","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In aliquet lorem urna, non viverra justo luctus nec. Fusce nibh purus, auctor ut ex eget, cursus vehicula sem. Nunc pretium condimentum nisi, blandit feugiat tortor hendrerit eget. Vestibulum in ullamcorper magna. Ut posuere nibh congue purus ultrices finibus laoreet non lacus. Proin eu dignissim lorem. Donec sit amet feugiat neque. Aliquam at laoreet erat.</p> <pre><code>Hello, World\n</code></pre>"},{"location":"about/","title":"About the Site","text":""},{"location":"about/#host","title":"Host","text":"<p>The Phoenix Project operates as a study group of the Twin Cities Section of the Institute of Electrical and Electronics Engineers.</p> <p>The Phoenix Biorhythm site is hosted on GitHub Pages.</p>"},{"location":"about/#typography","title":"Typography","text":"<p>Material for MkDocs directly integrates with Google Fonts. All fonts are taken from that collection.</p> <p>Body text and titles are set in , a nonserif font. </p> <p>Code samples are set in , a nonserif, monospace font.</p> <p>For clients who do not have these fonts, the style sheets specify some standard alternatives.</p> <p>See also \"Privacy\".</p>"},{"location":"about/#palette","title":"Palette","text":"<p>Starting with the idea of a dark blue for the primary color and a brown for the secondary, the following sites were used to build the palette:</p> <ul> <li>ColorHexa.com</li> <li>colordesigner.io</li> </ul> <p>The result is a tetradic color scheme, composed of web safe colors.</p> <p>      Dark Midnight Blue       Hex #003366  RGB 0, 51, 102  CMYK 100, 50, 0, 60 </p> <p>      very dark orange [brown tone]       Hex #663300  RGB 102, 51, 0  CMYK 0, 50, 100, 60 </p> <p>      very dark cyan - lime green       Hex #006633  RGB 0, 102, 51  CMYK 100, 0, 50, 60 </p> <p>      very dark pink       Hex #660033  RGB 102, 0, 51  CMYK 0, 100, 50, 60 </p>"},{"location":"about/#graphics","title":"Graphics","text":"<p>The Phoenix Project logo symbolizes the investigation of variation in blood pressure. It is a composite of three images:</p> <ul> <li>The interior of a human heart and some of the blood vessels,</li> <li>An abstract electrocardiogram (ECG) tracing in red, and</li> <li>An abstract week-long systolic blood pressure cycle in blue.</li> </ul> <p>The tracings are drawn along two different timescales</p> <p>The heart-image is Microsoft clip-art. The abstract tracings were drawn, and the entire logo composed, by the Halberg Chronobiology Center.</p> <p></p> <p>The Colophon icon is a colorized version of Wax Seal Ampersand by Rebecca Sicilia from Noun Project (CC BY 3.0).</p>"},{"location":"about/#privacy","title":"Privacy","text":"<p>The site uses the privacy plugin built into Material for MkDocs. The plugin:</p> <ol> <li>Scans the generated HTML for external assets, such as scripts, style sheets, images, and web fonts.</li> <li>Downloads them.</li> <li>Stores them in the site directory.</li> <li>Replaces all references with links to the downloaded copies for self-hosting.</li> </ol>"},{"location":"about/#license","title":"License","text":"<p>DRAFT ONLY</p> <p>License selection not finalized. The options being considered are:</p> <ul> <li>CCO 1.0</li> <li>CC BY 4.0</li> </ul> <p>Phoenix Biorhythm Platform by Christopher Adams is licensed under Attribution 4.0 International</p>"},{"location":"about/#technologies","title":"Technologies","text":""},{"location":"about/#mkdocs","title":"MkDocs","text":"<p>MkDocs is a static site generator that's geared towards building project documentation. Documentation source files are written primarily in Markdown, and configured with a single YAML configuration file</p> <p>This site uses Markdown, HTML and cascading style sheets.</p> <p>For full documentation, visit mkdocs.org.</p>"},{"location":"about/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"about/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/#theme","title":"Theme","text":"<p>Material for MkDocs</p>"},{"location":"about/#macros","title":"Macros","text":""},{"location":"about/#macros-plugin-environment","title":"Macros Plugin Environment","text":""},{"location":"about/#general-list","title":"General List","text":"<p>All available variables and filters within the macros plugin:</p> Variable Type Content extra dict config MkDocsConfig {'config_file_path': '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/mkdocs.yml', 'site_name': 'Phoenix Biorhythm Platform', 'nav': [{'Home': 'index.md'}, {'About the Site': 'about.md'}], 'pages': None, 'exclude_docs': None, 'not_in_nav': None, 'site_url': None, 'site_description': None, 'site_author': 'Christopher Adams', 'theme': Theme(name='material', dirs=['/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/overrides', '/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/material/templates', '/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/mkdocs/templates'], static_templates={'sitemap.xml', '404.html'}, name='material', locale=Locale('en'), language='en', direction=None, features=[], font={'text': 'Cabin', 'code': 'Ubuntu Mono'}, icon=None, favicon='images/circadian-rhythms-32x32.png', logo='images/circadian-rhythms-white.svg', palette=[{'media': '(prefers-color-scheme)', 'toggle': {'icon': 'material/brightness-auto', 'name': 'Switch to light mode'}}, {'media': '(prefers-color-scheme: light)', 'scheme': 'default', 'primary': 'blue grey', 'accent': 'indigo', 'toggle': {'icon': 'material/brightness-7', 'name': 'Switch to dark mode'}}, {'media': '(prefers-color-scheme: dark)', 'scheme': 'slate', 'primary': 'blue grey', 'accent': 'indigo', 'toggle': {'icon': 'material/brightness-4', 'name': 'Switch to system preference'}}]), 'docs_dir': '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/docs', 'site_dir': '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/site', 'copyright': '<p>Phoenix Biorhythm Platform by Christopher Adams is licensed under CC BY 4.0</p>', 'google_analytics': None, 'dev_addr': _IpAddressValue(host='127.0.0.1', port=8000), 'use_directory_urls': True, 'repo_url': 'https://github.com/cadams4341/phoenix-biorhythm-platform', 'repo_name': 'GitHub', 'edit_uri_template': None, 'edit_uri': 'edit/master/docs/', 'extra_css': ['stylesheets/hero-image.css'], 'extra_javascript': [{'path': 'https://unpkg.com/mermaid@10.7.0/dist/mermaid.min.js', 'type': '', 'defer': False, 'async': False}], 'extra_templates': [], 'markdown_extensions': ['toc', 'tables', 'fenced_code', 'admonition', 'attr_list', 'footnotes', 'md_in_html', 'meta', 'pymdownx.caret', 'pymdownx.arithmatex', 'pymdownx.emoji', 'pymdownx.highlight', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.superfences', 'pymdownx.tilde'], 'mdx_configs': {'toc': {'permalink': True}, 'pymdownx.emoji': {'emoji_index': , 'emoji_generator': }}, 'strict': False, 'remote_branch': 'gh-pages', 'remote_name': 'origin', 'extra': {}, 'plugins': {'macros': , 'material/privacy': , 'material/search': }, 'hooks': {}, 'watch': [], 'validation': {'nav': {'omitted_files': 20, 'not_found': 30, 'absolute_links': 20}, 'links': {'not_found': 30, 'absolute_links': 20, 'unrecognized_links': 20}}} environment dict system = 'MacOs', system_version = '12.7.2', python_version = '3.12.1', mkdocs_version = '1.5.3', macros_plugin_version = '1.0.5', jinja2_version = '3.1.3' plugin LegacyConfig {'module_name': 'main', 'modules': [], 'render_by_default': True, 'include_dir': '', 'include_yaml': [], 'j2_block_start_string': '', 'j2_block_end_string': '', 'j2_variable_start_string': '', 'j2_variable_end_string': '', 'on_undefined': 'keep', 'on_error_fail': False, 'verbose': False} git dict status = True, date [datetime], short_commit = '670e2f5', commit = '670e2f560fccbe89717e878759a321a38c601af5', tag = '', short_tag = '', author = 'Chris Adams', author_email = '155780943+cadams4341@users.noreply.github.com', committer = 'Chris Adams', committer_email = '155780943+cadams4341@users.noreply.github.com', date_ISO = 'Thu Jan 25 23:30:58 2024 -0600', message = 'touch', raw = 'commit 670e2f560fccbe89717e878759a321a38c601af5\\nAuthor: Chris Adams &lt;155780943+cadams4341@users.noreply.github.com&gt;\\nDate:   Thu Jan 25 23:30:58 2024 -0600\\n\\n    touch', root_dir = '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform' macros SuperDict context [function], macros_info [function], now [function], fix_url [function] filters dict pretty [function] filters_builtin dict abs [builtin_function_or_method], attr [function], batch [function], capitalize [function], center [function], count [builtin_function_or_method], d [function], default [function], dictsort [function], e [builtin_function_or_method], escape [builtin_function_or_method], filesizeformat [function], first [function], float [function], forceescape [function], format [function], groupby [function], indent [function], int [function], join [function], last [function], length [builtin_function_or_method], list [function], lower [function], items [function], map [function], min [function], max [function], pprint [function], random [function], reject [function], rejectattr [function], replace [function], reverse [function], round [function], safe [function], select [function], selectattr [function], slice [function], sort [function], string [builtin_function_or_method], striptags [function], sum [function], title [function], trim [function], truncate [function], unique [function], upper [function], urlencode [function], urlize [function], wordcount [function], wordwrap [function], xmlattr [function], tojson [function] navigation Navigation files Files page Page Page(title='About the Site', url='about/')"},{"location":"about/#config-information","title":"Config Information","text":"<p>Standard MkDocs configuration information. Do not try to modify.</p> <p>e.g. <code>{{ config.docs_dir }}</code></p> <p>See also the MkDocs documentation on the config object.</p> Variable Type Content config_file_path str '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/mkdocs.yml' site_name str 'Phoenix Biorhythm Platform' nav list [{'Home': 'index.md'}, {'About the Site': 'about.md'}] pages NoneType None exclude_docs NoneType None not_in_nav NoneType None site_url NoneType None site_description NoneType None site_author str 'Christopher Adams' theme Theme Theme(name='material', dirs=['/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/overrides', '/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/material/templates', '/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/mkdocs/templates'], static_templates={'sitemap.xml', '404.html'}, name='material', locale=Locale('en'), language='en', direction=None, features=[], font={'text': 'Cabin', 'code': 'Ubuntu Mono'}, icon=None, favicon='images/circadian-rhythms-32x32.png', logo='images/circadian-rhythms-white.svg', palette=[{'media': '(prefers-color-scheme)', 'toggle': {'icon': 'material/brightness-auto', 'name': 'Switch to light mode'}}, {'media': '(prefers-color-scheme: light)', 'scheme': 'default', 'primary': 'blue grey', 'accent': 'indigo', 'toggle': {'icon': 'material/brightness-7', 'name': 'Switch to dark mode'}}, {'media': '(prefers-color-scheme: dark)', 'scheme': 'slate', 'primary': 'blue grey', 'accent': 'indigo', 'toggle': {'icon': 'material/brightness-4', 'name': 'Switch to system preference'}}]) docs_dir str '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/docs' site_dir str '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/site' copyright str '<p>Phoenix Biorhythm Platform by Christopher Adams is licensed under CC BY 4.0</p>' google_analytics NoneType None dev_addr _IpAddressValue _IpAddressValue(host='127.0.0.1', port=8000) use_directory_urls bool True repo_url str 'https://github.com/cadams4341/phoenix-biorhythm-platform' repo_name str 'GitHub' edit_uri_template NoneType None edit_uri str 'edit/master/docs/' extra_css list ['stylesheets/hero-image.css'] extra_javascript list [{'path': 'https://unpkg.com/mermaid@10.7.0/dist/mermaid.min.js', 'type': '', 'defer': False, 'async': False}] extra_templates list [] markdown_extensions list ['toc', 'tables', 'fenced_code', 'admonition', 'attr_list', 'footnotes', 'md_in_html', 'meta', 'pymdownx.caret', 'pymdownx.arithmatex', 'pymdownx.emoji', 'pymdownx.highlight', 'pymdownx.mark', 'pymdownx.smartsymbols', 'pymdownx.superfences', 'pymdownx.tilde'] mdx_configs dict toc [dict], pymdownx.emoji [dict] strict bool False remote_branch str 'gh-pages' remote_name str 'origin' extra LegacyConfig {} plugins PluginCollection macros [MacrosPlugin], material/privacy [PrivacyPlugin], material/search [SearchPlugin] hooks dict watch list [] validation Validation {'nav': {'omitted_files': 20, 'not_found': 30, 'absolute_links': 20}, 'links': {'not_found': 30, 'absolute_links': 20, 'unrecognized_links': 20}}"},{"location":"about/#macros_1","title":"Macros","text":"<p>These macros have been defined programmatically for this environment (module or pluglets). </p> Variable Type Content context function (obj, var, value, e) <p>Default mkdocs_macro List the defined variables</p> macros_info function () <p>Test/debug function:         list useful documentation on the mkdocs_macro environment.</p> now function () <p>Get the current time (returns a datetime object).          Used alone, it provides a timestamp.         To get the year use <code>now().year</code>, for the month number          <code>now().month</code>, etc.</p> fix_url function (url, r) <p>If url is relative, fix it so that it points to the docs diretory.     This is necessary because relative links in markdown must be adapted     in html ('img/foo.png' =&gt; '../img/img.png').</p>"},{"location":"about/#git-information","title":"Git Information","text":"<p>Information available on the last commit and the git repository containing the documentation project:</p> <p>e.g. <code>{{ git.message }}</code></p> Variable Type Content status bool True date datetime datetime.datetime(2024, 1, 25, 23, 30, 58, tzinfo=tzoffset(None, -21600)) short_commit str '670e2f5' commit str '670e2f560fccbe89717e878759a321a38c601af5' tag str '' short_tag str '' author str 'Chris Adams' author_email str '155780943+cadams4341@users.noreply.github.com' committer str 'Chris Adams' committer_email str '155780943+cadams4341@users.noreply.github.com' date_ISO str 'Thu Jan 25 23:30:58 2024 -0600' message str 'touch' raw str 'commit 670e2f560fccbe89717e878759a321a38c601af5\\nAuthor: Chris Adams &lt;155780943+cadams4341@users.noreply.github.com&gt;\\nDate:   Thu Jan 25 23:30:58 2024 -0600\\n\\n    touch' root_dir str '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform'"},{"location":"about/#page-attributes","title":"Page Attributes","text":"<p>Provided by MkDocs. These attributes change for every page (the attributes shown are for this page).</p> <p>e.g. <code>{{ page.title }}</code></p> <p>See also the MkDocs documentation on the page object.</p> Variable Type Content file File page [Page], src_uri = 'about.md', name = 'about', dest_uri = 'about/index.html', url = 'about/', abs_src_path = '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/docs/about.md', abs_dest_path = '/Users/runner/work/phoenix-biorhythm-platform/phoenix-biorhythm-platform/site/about/index.html', inclusion [InclusionLevel] title str 'About the Site' children NoneType None previous_page Page Page(title='Home', url='./') next_page NoneType None _Page__active bool False update_date str '2024-01-27' canonical_url NoneType None abs_url NoneType None edit_url str 'https://github.com/cadams4341/phoenix-biorhythm-platform/edit/master/docs/about.md' markdown str '# ![Colophon](images/colophon-2.png){: style=\"width: 80px; height:80px; vertical-align: middle;\" } {{ page.title }}\\n\\n## Host\\n\\nThe Phoenix Project operates as a study group of the [Twin Cities Section of the Institute of Electrical and Electronics Engineers](http://www.tc-ieee.org){: target=\"_blank\" }.\\n\\nThe Phoenix Biorhythm site is hosted on GitHub Pages.\\n\\n## Typography\\n\\nMaterial for MkDocs directly integrates with [Google Fonts](https://fonts.google.com/){: target=\"_blank\" }. All fonts are taken from that collection.\\n\\nBody text and titles are set in ![Cabin](images/cabin.jpg){: alt=\"cabin\" style=\"vertical-align: middle; height: 40px;\" }, a nonserif font. \\n\\nCode samples are set in ![Ubuntu Mono](images/ubuntu-mono.jpg){: alt=\"Ubuntu Mono\" style=\"vertical-align: middle; height: 40px;\" }, a nonserif, monospace font.\\n\\nFor clients who do not have these fonts, the style sheets specify some standard alternatives.\\n\\nSee also \"[Privacy](#privacy)\".\\n\\n## Palette\\n\\nStarting with the idea of a dark blue for the primary color and a brown for the secondary, the following sites were used to build the palette:\\n\\n* [ColorHexa.com](https://www.colorhexa.com){: target=\"_blank\" }\\n* [colordesigner.io](https://colordesigner.io){: target=\"_blank\" }\\n\\nThe result is a [tetradic color scheme](https://en.wikipedia.org/wiki/Color_scheme#Tetradic){: target=\"_blank\" }, composed of [web safe colors](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors){: target=\"_blank\" }.\\n\\n<p>\\n\\n    Dark Midnight Blue\\n    \\n\\nHex #003366\\n\\nRGB 0, 51, 102\\n\\nCMYK 100, 50, 0, 60\\n</p>\\n\\n<p>\\n\\n    very dark orange [brown tone]\\n    \\n\\nHex #663300\\n\\nRGB 102, 51, 0\\n\\nCMYK 0, 50, 100, 60\\n</p>\\n\\n<p>\\n\\n    very dark cyan - lime green\\n    \\n\\nHex #006633\\n\\nRGB 0, 102, 51\\n\\nCMYK 100, 0, 50, 60\\n</p>\\n\\n<p>\\n\\n    very dark pink\\n    \\n\\nHex #660033\\n\\nRGB 102, 0, 51\\n\\nCMYK 0, 100, 50, 60\\n</p>\\n\\n## Graphics\\n\\n![Phoenix Logo](images/phoenix-logo.jpg){: #phoenix-logo style=\"width: 68; height:80;\" }\\n\\nThe Phoenix Project logo symbolizes the investigation of variation\\nin blood pressure. It is a composite of three images:\\n\\n- The interior of a human heart and some of the blood vessels,\\n- An abstract electrocardiogram (ECG) tracing in red, and\\n- An abstract week-long systolic blood pressure cycle in blue.\\n\\nThe tracings are drawn along two different timescales\\n\\nThe heart-image is Microsoft clip-art.\\nThe abstract tracings were drawn, and the entire logo composed,\\nby the [Halberg Chronobiology Center](https://halbergchronobiologycenter.umn.edu){: target=\"_blank\" }.\\n\\n\\n{: #colophon-icon }\\n\\nThe Colophon icon is a colorized version of Wax Seal Ampersand by Rebecca Sicilia from Noun Project (CC BY 3.0).\\n\\n## Privacy\\n\\nThe site uses the [privacy plugin built into Material for MkDocs](https://squidfunk.github.io/mkdocs-material/plugins/privacy/){: target=\"_blank\" }. The plugin:\\n\\n1. Scans the generated HTML for external assets, such as scripts, style sheets, images, and web fonts.\\n2. Downloads them.\\n3. Stores them in the site directory.\\n4. Replaces all references with links to the downloaded copies for self-hosting.\\n\\n## License\\n\\n!!! bug \"DRAFT ONLY\"\\n    License selection not finalized. The options being considered are:\\n\\n    * CCO 1.0\\n    * CC BY 4.0\\n\\n<p>Phoenix Biorhythm Platform by Christopher Adams is licensed under Attribution 4.0 International</p>\\n\\n## Technologies\\n\\n### MkDocs\\n\\nMkDocs is a static site generator that\\'s geared towards building project documentation. Documentation source files are written primarily in [Markdown](https://www.markdownguide.org){: target=\"_blank\" }, and configured with a single YAML configuration file\\n\\nThis site uses Markdown, HTML and cascading style sheets.\\n\\nFor full documentation, visit [mkdocs.org](https://www.mkdocs.org){: target=\"_blank\" }.\\n\\n#### Commands\\n\\n* `mkdocs new [dir-name]` - Create a new project.\\n* `mkdocs serve` - Start the live-reloading docs server.\\n* `mkdocs build` - Build the documentation site.\\n* `mkdocs -h` - Print help message and exit.\\n\\n#### Project layout\\n\\n```\\nmkdocs.yml    # The configuration file.\\ndocs/\\n    index.md  # The documentation homepage.\\n    ...       # Other markdown pages, images and other files.\\n```\\n\\n#### Theme\\n\\n[Material for MkDocs](https://squidfunk.github.io/mkdocs-material){: target=\"_blank\" }\\n\\n#### Macros\\n\\n{{ macros_info() }}\\n' _title_from_render NoneType None content NoneType None toc list [] meta dict <p>To have all titles of all pages, use:</p> <pre><code>{% for page in navigation.pages %}\n- {{ page.title }}\n{% endfor %}\n</code></pre>"},{"location":"about/#plugin-filters","title":"Plugin Filters","text":"<p>These filters are provided as a standard by the macros plugin.</p> Variable Type Content pretty function (var_list, var, var_type, content, rows, header, e) <p>Default mkdocs_macro Prettify a dictionary or object          (used for environment documentation, or debugging).</p>"},{"location":"about/#builtin-jinja2-filters","title":"Builtin Jinja2 Filters","text":"<p>These filters are provided by Jinja2 as a standard.</p> <p>See also the Jinja2 documentation on builtin filters).</p> Variable Type Content abs builtin_function_or_method <p>Return the absolute value of the argument.</p> attr function (environment, obj, name, value) <p>Get an attribute of an object.  <code>foo|attr(\"bar\")</code> works like     <code>foo.bar</code> just that always an attribute is returned and items are not     looked up.</p> batch function (value, linecount, fill_with, tmp, item) <p>A filter that batches items. It works pretty much like <code>slice</code>     just the other way round. It returns a list of lists with the     given number of items. If you provide a second parameter this     is used to fill up missing items. See this example.</p> capitalize function (s) <p>Capitalize a value. The first character will be uppercase, all others     lowercase.</p> center function (value, width) <p>Centers the value in a field of a given width.</p> count builtin_function_or_method <p>Return the number of items in a container.</p> d function (value, default_value, boolean) <p>If the value is undefined it will return the passed default value,     otherwise the value of the variable.</p> default function (value, default_value, boolean) <p>If the value is undefined it will return the passed default value,     otherwise the value of the variable.</p> dictsort function (value, case_sensitive, by, reverse, sort_func) <p>Sort a dict and yield (key, value) pairs. Python dicts may not     be in the order you want to display them in, so sort them first.</p> e builtin_function_or_method <p>Replace the characters <code>&amp;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>'</code>, and <code>\"</code> in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML.</p> escape builtin_function_or_method <p>Replace the characters <code>&amp;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>'</code>, and <code>\"</code> in the string with HTML-safe sequences. Use this if you need to display text that might contain such characters in HTML.</p> filesizeformat function (value, binary, bytes, base, prefixes, i, prefix, unit) <p>Format the value like a 'human-readable' file size (i.e. 13 kB,     4.1 MB, 102 Bytes, etc).  Per default decimal prefixes are used (Mega,     Giga, etc.), if the second parameter is set to <code>True</code> the binary     prefixes are used (Mebi, Gibi).</p> first function (args, kwargs, b) <p>Return the first item of a sequence.</p> float function (value, default) <p>Convert the value into a floating point number. If the     conversion doesn't work it will return <code>0.0</code>. You can     override this default using the first parameter.</p> forceescape function (value) <p>Enforce HTML escaping.  This will probably double escape variables.</p> format function (value, args, kwargs) <p>Apply the given values to a <code>printf-style</code>_ format string, like     <code>string % values</code>.</p> groupby function (args, kwargs, b) <p>Group a sequence of objects by an attribute using Python's     :func:<code>itertools.groupby</code>. The attribute can use dot notation for     nested access, like <code>\"address.city\"</code>. Unlike Python's <code>groupby</code>,     the values are sorted first so only one group is returned for each     unique value.</p> indent function (s, width, first, blank, newline, rv, lines) <p>Return a copy of the string with each line indented by 4 spaces. The     first line and blank lines are not indented by default.</p> int function (value, default, base) <p>Convert the value into an integer. If the     conversion doesn't work it will return <code>0</code>. You can     override this default using the first parameter. You     can also override the default base (10) in the second     parameter, which handles input with prefixes such as     0b, 0o and 0x for bases 2, 8 and 16 respectively.     The base is ignored for decimal numbers and non-string values.</p> join function (args, kwargs, b) <p>Return a string which is the concatenation of the strings in the     sequence. The separator between elements is an empty string per     default, you can define it with the optional parameter.</p> last function (environment, seq) <p>Return the last item of a sequence.</p> length builtin_function_or_method <p>Return the number of items in a container.</p> list function (args, kwargs, b) <p>Convert the value into a list.  If it was a string the returned list     will be a list of characters.</p> lower function (s) <p>Convert a value to lowercase.</p> items function (value) <p>Return an iterator over the <code>(key, value)</code> items of a mapping.</p> map function (args, kwargs, b) <p>Applies a filter on a sequence of objects or looks up an attribute.     This is useful when dealing with lists of objects but you are really     only interested in a certain value of it.</p> min function (environment, value, case_sensitive, attribute) <p>Return the smallest item from the sequence.</p> max function (environment, value, case_sensitive, attribute) <p>Return the largest item from the sequence.</p> pprint function (value) <p>Pretty print a variable. Useful for debugging.</p> random function (context, seq) <p>Return a random item from the sequence.</p> reject function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to each object,     and rejecting the objects with the test succeeding.</p> rejectattr function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to the specified     attribute of each object, and rejecting the objects with the test     succeeding.</p> replace function (eval_ctx, s, old, new, count) <p>Return a copy of the value with all occurrences of a substring     replaced with a new one. The first argument is the substring     that should be replaced, the second is the replacement string.     If the optional third argument <code>count</code> is given, only the first     <code>count</code> occurrences are replaced.</p> reverse function (value, rv, e) <p>Reverse the object or return an iterator that iterates over it the other     way round.</p> round function (value, precision, method, func) <p>Round the number to a given precision. The first     parameter specifies the precision (default is <code>0</code>), the     second the rounding method.</p> safe function (value) <p>Mark the value as safe which means that in an environment with automatic     escaping enabled this variable will not be escaped.</p> select function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to each object,     and only selecting the objects with the test succeeding.</p> selectattr function (args, kwargs, b) <p>Filters a sequence of objects by applying a test to the specified     attribute of each object, and only selecting the objects with the     test succeeding.</p> slice function (args, kwargs, b) <p>Slice an iterator and return a list of lists containing     those items. Useful if you want to create a div containing     three ul tags that represent columns.</p> sort function (environment, value, reverse, case_sensitive, attribute, key_func) <p>Sort an iterable using Python's :func:<code>sorted</code>.</p> string builtin_function_or_method <p>Convert an object to a string if it isn't already. This preserves a :class:<code>Markup</code> string rather than converting it back to a basic string, so it will still be marked as safe and won't be escaped again.</p> striptags function (value) <p>Strip SGML/XML tags and replace adjacent whitespace by one space.</p> sum function (args, kwargs, b) <p>Returns the sum of a sequence of numbers plus the value of parameter     'start' (which defaults to 0).  When the sequence is empty it returns     start.</p> title function (s, item) <p>Return a titlecased version of the value. I.e. words will start with     uppercase letters, all remaining characters are lowercase.</p> trim function (value, chars) <p>Strip leading and trailing characters, by default whitespace.</p> truncate function (env, s, length, killwords, end, leeway, result) <p>Return a truncated copy of the string. The length is specified     with the first parameter which defaults to <code>255</code>. If the second     parameter is <code>true</code> the filter will cut the text at length. Otherwise     it will discard the last word. If the text was in fact     truncated it will append an ellipsis sign (<code>\"...\"</code>). If you want a     different ellipsis sign than <code>\"...\"</code> you can specify it using the     third parameter. Strings that only exceed the length by the tolerance     margin given in the fourth parameter will not be truncated.</p> unique function (environment, value, case_sensitive, attribute, getter, seen, item, key) <p>Returns a list of unique items from the given iterable.</p> upper function (s) <p>Convert a value to uppercase.</p> urlencode function (value, items) <p>Quote data for use in a URL path or query using UTF-8.</p> urlize function (eval_ctx, value, trim_url_limit, nofollow, target, rel, extra_schemes, policies, rel_parts, scheme, rv) <p>Convert URLs in text into clickable links.</p> wordcount function (s) <p>Count the words in that string.</p> wordwrap function (environment, s, width, break_long_words, wrapstring, break_on_hyphens, textwrap, line) <p>Wrap a string to the given width. Existing newlines are treated     as paragraphs to be wrapped separately.</p> xmlattr function (eval_ctx, d, autospace, items, key, value, rv) <p>Create an SGML/XML attribute string based on the items in a dict.</p> tojson function (eval_ctx, value, indent, policies, dumps, kwargs) <p>Serialize an object to a string of JSON, and mark it safe to     render in HTML. This filter is only for use in HTML documents.</p>"}]}